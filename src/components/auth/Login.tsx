import { Link, useNavigate } from "react-router-dom";
import { useForm } from "react-hook-form";
// import api from "../../api/axios";
import axios from "axios";

type LoginInputs = {
  email: string;
  password: string;
};

const Login = () => {
  const navigate = useNavigate();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<LoginInputs>();

  const onSubmit = async (data: LoginInputs) => { 
    try {
      const response = await axios.post("http://localhost:3001/login", data);

      // üëâ ki·ªÉm tra backend tr·∫£ token d∆∞·ªõi key n√†o:
      const token = response.data.token || response.data.access_token;
      const user = response.data.user;

      if (!token) {
        throw new Error("Kh√¥ng nh·∫≠n ƒë∆∞·ª£c token t·ª´ server");
      }

      // ‚úÖ L∆∞u token v√† th√¥ng tin ng∆∞·ªùi d√πng
      localStorage.setItem("auth_token", token);
      localStorage.setItem("user", JSON.stringify(user));

      alert("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
      navigate("/");
    } catch (error: unknown) {
      if (axios.isAxiosError(error)) {
        console.error("Login failed:", error.response?.data || error.message);
        alert("Sai email ho·∫∑c m·∫≠t kh·∫©u!");
      } else {
        console.error("Unexpected error:", error);
        alert("ƒê√£ x·∫£y ra l·ªói kh√¥ng x√°c ƒë·ªãnh");
      }
    }
  };

  return (
    <div className="form-container sign-in-container">
      <form onSubmit={handleSubmit(onSubmit)}>
        <h1>Sign In</h1>

        <input
          type="email"
          placeholder="Email"
          {...register("email", {
            required: "Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng",
            pattern: {
              value: /^[\w.-]+@([\w-]+\.)+[\w-]{2,4}$/,
              message: "Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng",
            },
            validate: (value) =>
              value.endsWith("@gmail.com") ||
              "Email ph·∫£i k·∫øt th√∫c b·∫±ng @gmail.com",
          })}
        />
        {errors.email && (
          <span style={{ color: "red", fontWeight: "600" }}>
            {errors.email.message}
          </span>
        )}

        <input
          type="password"
          placeholder="Password"
          {...register("password", {
            required: "M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng",
            minLength: {
              value: 6,
              message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±",
            },
            pattern: {
              value: /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/,
              message: "M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t 1 ch·ªØ c√°i v√† 1 s·ªë",
            },
          })}
        />
        {errors.password && (
          <span style={{ color: "red", fontWeight: "600" }}>
            {errors.password.message}
          </span>
        )}

        <Link to="#">Forgot your password?</Link>

        <button type="submit">SIGN IN</button>
      </form>
    </div>
  );
};

export default Login;
